<?xml version="1.0"?><data><abstract><p>Computational methods for <italic>de novo</italic> identification of gene regulation elements, such as transcription factor binding sites, have proved to be useful for deciphering genetic regulatory networks. However, despite the availability of a large number of algorithms, their strengths and weaknesses are not sufficiently understood. Here, we designed a comprehensive set of performance measures and benchmarked five modern sequence-based motif discovery algorithms using large datasets generated from <italic>Escherichia coli</italic> RegulonDB. Factors that affect the prediction accuracy, scalability and reliability are characterized. It is revealed that the nucleotide and the binding site level accuracy are very low, while the motif level accuracy is relatively high, which indicates that the algorithms can usually capture at least one correct motif in an input sequence. To exploit diverse predictions from multiple runs of one or more algorithms, a consensus ensemble algorithm has been developed, which achieved 6&#8211;45% improvement over the base algorithms by increasing both the sensitivity and specificity. Our study illustrates limitations and potentials of existing sequence-based motif discovery algorithms. Taking advantage of the revealed potentials, several promising directions for further improvements are discussed. Since the sequence-based algorithms are the baseline of most of the modern motif discovery algorithms, this paper suggests substantial improvements would be possible for them.</p></abstract><body xmlns:ns0="http://www.w3.org/1999/xlink" xmlns:ns1="http://www.w3.org/1998/Math/MathML"><sec><title>INTRODUCTION</title><p>Computational identification of transcription factor binding sites from the upstream regions of genes has proved to be extremely valuable in functional genomics for deciphering the complex genetic regulatory networks (<xref ref-type="bibr" rid="b1">1</xref>&#8211;<xref ref-type="bibr" rid="b4">4</xref>). Correspondingly, there have emerged a large number of computational algorithms for identifying regulatory elements from DNA sequences with or without additional information, which have been classified and summarized in excellent reviews (<xref ref-type="bibr" rid="b1">1</xref>,<xref ref-type="bibr" rid="b2">2</xref>,<xref ref-type="bibr" rid="b5">5</xref>&#8211;<xref ref-type="bibr" rid="b8">8</xref>). Systems that integrate these tools for transcription regulation analysis are also available (<xref ref-type="bibr" rid="b9">9</xref>). Recently, however, it has been realized that current motif discovery algorithms are far from perfect. To improve the prediction accuracy, researchers incorporated other sources of information to complement the sequence information, such as phylogenetic trees and gene expression patterns (<xref ref-type="bibr" rid="b10">10</xref>&#8211;<xref ref-type="bibr" rid="b14">14</xref>).</p><p>On the other hand, despite the availability of dozens of motif discovery algorithms, there are few systematic comparative benchmarking that work to independently evaluate the prediction performance of existing motif discovery algorithms (<xref ref-type="bibr" rid="b15">15</xref>&#8211;<xref ref-type="bibr" rid="b19">19</xref>). Day and McMorris (<xref ref-type="bibr" rid="b15">15</xref>) compared consensus methods for motif discovery in terms of their appropriateness, basis, conformity, consistency, rationality and robustness. These measures are defined mostly from program users' point of view and thus are extremely valuable to guide users to make choice from consensus methods. However, since it is an early work, no widely used modern algorithms are evaluated. Ben&#237;tez-Bell&#243;n <italic>et al</italic>. (<xref ref-type="bibr" rid="b20">20</xref>) evaluated one motif discovery algorithm, namely, Dyad-analysis and one pattern search/matching algorithm and suggested how to select optimal matching threshold to achieve better prediction results. Although the same RegulonDB datasets of the earlier stage were used as in this paper, no systematic comparison of multiple motif discovery algorithms has been carried out in this research. The influence of other factors, such as sequence number and scalability, is also not characterized. Sinha and Tompa (<xref ref-type="bibr" rid="b17">17</xref>) compared their YMF (<xref ref-type="bibr" rid="b21">21</xref>) with two other algorithms with synthetic data and real datasets from yeast. Recently, 13 motif discovery algorithms have been evaluated using a well-selected set of eukaryotic datasets (<xref ref-type="bibr" rid="b18">18</xref>).</p><p>The focus of this paper is to extend earlier works to prokaryotic datasets and to clarify the limitations and potentials of existing motif discovery algorithms. Complementary to the previous benchmarking work (<xref ref-type="bibr" rid="b18">18</xref>) in which algorithm developers were allowed to fine-tune the running parameters and reported the best results, we only allow minimal parameter-tuning during performance evaluation. Performance evaluation based only on the predictions with the highest score has the risk of penalizing some practically effective algorithms, since in many cases the predicted motifs with the highest score are not the motifs with the highest accuracy (<xref ref-type="bibr" rid="b19">19</xref>). Here, a predicted motif is defined as all the predicted binding sites for an input sequence set out of one prediction by a motif discovery algorithm. It should also be noted that no motif-search algorithms are included in this investigation as discussed by Ben&#237;tez-Bell&#243;n <italic>et al</italic>. (<xref ref-type="bibr" rid="b20">20</xref>) and more extensively by Osada <italic>et al</italic>. (<xref ref-type="bibr" rid="b22">22</xref>). Although there are iterative alternating steps between pattern search and position-specific score matrix (PSSM) pattern summarization, there is no clear-cut two stages of pattern discovery and pattern search in our evaluated algorithms as in the case of Dyad-analysis (<xref ref-type="bibr" rid="b23">23</xref>).</p><p>We define a set of prediction performance indexes for motif discovery algorithms and conduct comparative evaluation of five motif discovery algorithms in terms of their prediction accuracy, scalability and the reliability of their significance scores with the RegulonDB, in which the real binding site information is available through experimental methods. We investigated how factors such as the width of a target motif, the number of input sequences and the information content of target motifs may influence the prediction accuracy. Based on these evaluations, we provide some guidelines for motif discovery algorithm users as well as algorithm developers for improving the prediction accuracy. Five algorithms, namely, AlignACE (<xref ref-type="bibr" rid="b24">24</xref>), MEME (<xref ref-type="bibr" rid="b25">25</xref>), BioProspector (<xref ref-type="bibr" rid="b26">26</xref>), MDScan (<xref ref-type="bibr" rid="b19">19</xref>) and MotifSampler (<xref ref-type="bibr" rid="b27">27</xref>) are evaluated. These are the motif discovery algorithms that only use DNA sequence information. There are several factors considered in choosing these algorithms. First, they are widely used in practice. Second, they are used as the base algorithms to develop more advanced algorithms, such as PhyME (<xref ref-type="bibr" rid="b13">13</xref>). Third, these algorithms are readily downloadable from Internet, allowing us to do large-scale local benchmarking runs. Since the average motif length of RegulonDB is 21, we do not include algorithms that can only handle short motifs (e.g. &lt;10 nt), such as the oligonucleotide frequency counting method (<xref ref-type="bibr" rid="b28">28</xref>). Some of these algorithms turn out to be impractical due to their prohibitive demand for computational resources (<xref ref-type="bibr" rid="b29">29</xref>). We also pass by the algorithms that are only suitable for highly conserved motifs, such as some combinatorial or enumerative exact algorithms (<xref ref-type="bibr" rid="b12">12</xref>).</p><p>Our comprehensive large-scale benchmark experiments show that the performance of popular motif algorithms based only on DNA sequence information is still quite low, with &#8764;15&#8211;25% accuracy at the nucleotide level and 25&#8211;35% at the binding site level for sequences of 400 nt long. However, surprisingly, they are capable of predicting at least one binding site correctly in more than 90% of the time. Among the factors that affect the prediction accuracy, the sequence length is found to be the most critical. The performance of all algorithms degrades significantly as the sequence length increases. On the other hand, we find that if a certain number of sequences are available, using more sequences does not improve the prediction accuracy. Finally, we propose a simple ensemble algorithm for motif discovery by combining prediction results from multiple runs of three heuristic motif discovery algorithms. The ensemble algorithm can improve the prediction accuracy of their corresponding base algorithms by up to 45% in the case of sequence sets with lengths of 100 nt. The best ensemble algorithm achieves a better performance than the popular MEME algorithm by 52%. The improvement is achieved by both increasing the specificity and sensitivity. These results imply that we can take advantage of many choices of basic motif discovery algorithms to develop a strong ensemble algorithm. Results from different algorithms or algorithm runs can be used as a cross-validation between each other, suggesting that high consensus among multiple runs strongly indicates that a motif is found correctly.</p></sec><sec sec-type="materials|methods"><title>MATERIALS AND METHODS</title><sec><title>Datasets</title><p>To evaluate motif discovery algorithms, it is desirable to have diverse datasets to illuminate the effects of a variety of factors on prediction performance. We use the binding sites (motif) information of <italic>Escherichia coli</italic> K-12 stored in RegulonDB (<xref ref-type="bibr" rid="b30">30</xref>) to generate various types of input sequence sets. RegulonDB is selected based on the following considerations: it has been used by many other researchers for benchmark (<xref ref-type="bibr" rid="b25">25</xref>,<xref ref-type="bibr" rid="b27">27</xref>,<xref ref-type="bibr" rid="b31">31</xref>); it complements the latest benchmark study (<xref ref-type="bibr" rid="b18">18</xref>) in which only eukaryotic datasets were used; it has also been used by a comparative study of motif representation and motif search algorithms (<xref ref-type="bibr" rid="b22">22</xref>) and an early evaluation of a motif discovery and a motif search algorithm (<xref ref-type="bibr" rid="b20">20</xref>).</p><p>In this benchmarking, the test sequences are generated using a cleaned RegulonDB as well as the gene information and the whole genome sequence of <italic>E.coli</italic>. The raw data for generating input sequences include the following three files: ecoli.regulonDB (<xref ref-type="bibr" rid="b30">30</xref>), which stores experimentally determined binding sites information including transcription factors, start and end positions on the genome, and location on the forward or reverse sequence; ecoli.gene, which includes start and end positions of genes in the genome; ecoli.genome, which is the whole <italic>E.coli</italic> genome sequence taken from KEGG database (<xref ref-type="bibr" rid="b32">32</xref>).</p><p>Binding site records in RegulonDB are organized in groups which bind to the same transcription factor. From RegulonDB, the following binding sites records are discarded: any record that does not have positional information on the genome, any duplicated record, any record that differs with other binding site records only by a &lt;5 nt shift. Finally, we remove binding site groups with only one sequence. We refer this cleaned dataset as ECRDB70. Note that our ECRDB70 is the source dataset from which a variety of input datasets are generated (see below). ECRDB70 is thus different from the input sequence datasets used in the previous benchmarking work (<xref ref-type="bibr" rid="b18">18</xref>).</p><p>We generated two types of datasets (Type A and B) from ECRDB70 (<xref ref-type="fig" rid="fig1">Figure 1</xref>). Type A datasets are generated from the intergenic regions of <italic>E.coli</italic> genome. It is generated as follows: for each known binding site of a motif group, we align it to the <italic>E.coli</italic> genome, locating the adjacent genes to the binding site and extracting the intergenic region to generate one input sequence. If all the binding sites in a motif group are located in the same intergenic region thus only one intergenic sequence can be extracted, that motif group was discarded. The final screened dataset has 62 motif groups, which is termed ECRDB62A. It has the following characteristics: the average number of sequences per motif group: 12; the average number of sites per sequence: 1.85; the average sequence length: 300 nt; the average site width: 22.83. <xref ref-type="fig" rid="fig2">Figure 2</xref> shows the distributions of the number of sequences per motif group and the number of sites per sequence.</p><p>Type B datasets include sequences with symmetric margins on both sides of known binding sites. They are generated as follows. For each binding site of a motif group, we align it with the <italic>E.coli</italic> genome and extend the binding site in both directions by adding symmetric margins of a given length along the genome. In this manner, we can define a series of datasets with increasing margin sizes to test the scalability of motif discovery algorithms. In some motif groups, multiple binding sites appear in a single sequence when the margin size is large. For instance, transcription factor XylR has binding sites at the positions 3728472, 3728492, 3728622 and 3728642 in the genome. Thus, when the margin size is &gt;200, all the binding sites appear in each of the input sequences though these sequences are different. We kept these exceptional cases in the dataset because this case also happens in a real situation. Each Type B dataset (ECRDB70B-X) with margin size X has the following characteristics: there are 70 binding site groups, each with at least two sequences; the average number of sequences per motif group is 12 with the standard deviation of 21; the average number of sites per sequence is 1.62; the average site width is 21.70 with the standard deviation of 11.74. The high values of the standard deviations reflect the diversity and variation among input sequence sets. For type B datasets, we observe that when the margin sizes are larger (e.g. &gt;500 nt), some part of the sequences are located in the coding regions. However, as to be shown in Results, no significant influence has been observed of these variations on the prediction accuracy. Type A dataset is suitable for analyzing motif discovery for co-expressed genes while B provides a good model for analyzing data from ChIP&#8211;chip experiments.</p><p>The ECRDB70, ECRDB62A (the intergenic dataset), ECRDB70B-X motif datasets and the generated sequence datasets used in our experiments are available at <ext-link ext-link-type="uri" ns0:href="http://dragon.bio.purdue.edu/pmotif/" />.</p></sec><sec><title>Algorithms tested</title><p>Five tested motif discovery algorithms are briefly described below. We introduce the major characteristics of each algorithm as well as the running parameters used in our experiments. We also describe a random algorithm used to evaluate the statistical significance of the prediction accuracy of tested motif discovery algorithms.</p><p>Basically, most of the algorithm parameters are set as default values or are set based on very general biological facts rather than on the details of the RegulonDB datasets (See Supplementary Material for the list of parameters used). This is more realistic than the previous study (<xref ref-type="bibr" rid="b18">18</xref>), since in practice expert knowledge of using a specific algorithm is usually not available for ordinary users. Our minimal parameter-tuning policy ensures that the algorithm performance reported here is closer to that in real-world practice. The difficulty of tuning parameters is discussed in Results.</p><sec><title>AlignACE</title><p>AlignACE (<xref ref-type="bibr" rid="b24">24</xref>) is a stochastic motif discovery algorithm based on the widely adopted Gibbs Sampling method (<xref ref-type="bibr" rid="b33">33</xref>). Compared with the original Gibbs Sampling method, it adds the following major features: both strands of sequences are searched; near-optimum sampling is improved; an iterative masking approach is used to search multiple motifs. Running parameters for AlignACE are set as default except that the gcback (the background GC content) is set as 0.5 and the expected motif width is set to 15 unless otherwise specified. We have investigated the effect of the motif width setting in <xref ref-type="table" rid="tbl3">Table 3</xref>.</p><p>The major statistical score used by AlignACE, the MAP score, measures the degree to which a motif is over-represented relative to the expected random occurrence of such a motif in the sequence.</p></sec><sec><title>BioProspector</title><p>BioProspector (<xref ref-type="bibr" rid="b26">26</xref>) is another variant of the Gibbs Sampling algorithm. Compared with the Lawrence version (<xref ref-type="bibr" rid="b33">33</xref>), it added a Markov model estimated from all promoter sequences in the genome to model adjacent nucleotide dependency. It has 15 parameters. We use the default values for most of these parameters except for the motif width, which is set to 15, and the number of top motifs to report, which is set to 5. The background frequency model is generated using the whole <italic>E.coli</italic> genome, and the third-order Markov model is used unless otherwise specified. The order of the Markov model is chosen because it was the best among those tested (see Results).</p></sec><sec><title>MDScan</title><p>MDScan (<xref ref-type="bibr" rid="b19">19</xref>) is an enumerative deterministic greedy algorithm. It selects several top motif candidates according to the chip-array enhancement score to build motif models and then employs a greedy strategy to improve the models. We used the default parameter set except for the motif width, which is set to 15. The background frequency model is generated using the whole <italic>E.coli</italic> genome, and the third-order Markov model is used unless otherwise specified. MDScan uses a maximum a posterior (MAP) score to evaluate candidate motifs.</p></sec><sec><title>MEME</title><p>MEME (Multiple Expectation Maximization Estimation) (<xref ref-type="bibr" rid="b25">25</xref>) is based on the expectation maximization (EM) technique. With a given motif width <italic>w</italic>, MEME first decomposes original sequences into <italic>w</italic>-mers. Each <italic>w</italic>-mer could be a motif or a background subsequence to be determined by the motif and background model components. The search space increases significantly with increasing number of sequences and sequence lengths. It is the only algorithm in this evaluation that does not require a motif width parameter, which can be estimated by itself. We set the maximum dataset size in characters as 1 million, maximum running time as 3600 CPU seconds, maximal number of motifs to find as five, minimum number of sites for each motif as one. The rest of the parameters are used as default. The background frequency model is generated using the whole <italic>E.coli</italic> genome, and the third-order Markov model is used unless otherwise specified.</p></sec><sec><title>MotifSampler</title><p>MotifSampler (<xref ref-type="bibr" rid="b27">27</xref>) is another motif discovery algorithm based on Gibbs sampling. It extends the original Gibbs Sampling approach in two ways. First, it introduces a higher-order Markov background model. Second, it incorporates a Bayesian mechanism to estimate the number of motifs occurring in each sequence.</p><p>MotifSampler has seven major parameters. We made the following adjustments to the default parameter values. We only search input sequences without including its reverse complements because all known sites are aligned on the forward direction of the input sequences. We search five different motifs with width of 15 unless specified otherwise. The number of repeating runs is set to five. The background frequency model is generated using the intergenic region sequences of all <italic>E.coli</italic> genome, and the third-order Markov model is used unless otherwise specified.</p></sec><sec><title>Consensus ensemble algorithm</title><p>Stochastic motif discovery algorithms, such as AlignACE, BioProspector and MotifSampler, usually obtain different predictions for different running conditions, such as parameter settings or random seeds. However, it is observed that many such predictions tend to cluster together, which hints that summarizing these results may improve the prediction performance. In this section, we propose a simple consensus ensemble algorithm (CEA) to illustrate how ensemble algorithms could improve existing motif discovery algorithms.</p><p>The CEA algorithm is composed of the following steps. (i) A base motif discovery algorithm such as AlignACE with different random seeds is run for <italic>N<sub>r</sub></italic> times (<italic>N<sub>r</sub></italic> = 10 in the current test). For each run, a predicted motif with the highest score and one more more binding sites is collected, thus resulting in total of motifs. (ii) For each input sequence, all the predicted binding sites on the input sequence from the motifs are aligned on the sequence (<xref ref-type="fig" rid="fig3">Figure 3</xref>). (iii) For each position of the input sequence, the number of times the position is included in predicted binding sites, or votes to the position, <italic>V<sub>i</sub></italic>, are counted. Then, it is normalized by the number of predicted motifs, <italic>N<sub>r</sub></italic>, to compute the consensus score of the position, <italic>V<sub>i</sub></italic>/<italic>N<sub>r</sub></italic>. (iv) Positions whose consensus score is smaller than a threshold parameter, <italic>&#952;<sub>c</sub></italic>, are discarded. Consecutive highly voted positions form a candidate of a binding site region as shown in <xref ref-type="fig" rid="fig3">Figure 3</xref>. But if the width of a candidate region is shorter than the binding site width specified by the parameter of the base algorithm (e.g. 15), that region is discarded. Multiple candidate regions may be generated. In case when no positions are left on the sequence by this discarding step, the position with the highest consensus score is kept. (v) Adjustment of the binding site width for each candidate region. Starting from the center of a candidate region, extend 1 nt in the direction of one of its two sides that has higher consensus score until the specified motif width is reached. Note that CEA only generates one binding site prediction per candidate region. Depending on the threshold, <italic>&#952;<sub>c</sub></italic>, zero or more (but at most two) binding sites will be reported from each input sequence. In <xref ref-type="table" rid="tbl7">Table 7</xref>, results with different threshold values are shown. A more sophisticated ensemble algorithm without ratio parameter has been developed and will be reported elsewhere.</p></sec><sec><title>Random algorithm</title><p>To estimate the statistical significance of the prediction accuracy, a certain number of sites are randomly picked up as the predicted motifs. The number of sites picked up for each input sequence is determined as follows: 10 runs of AlignACE, BioProspector, and MotifSampler and one run of MEME are conducted to get the minimum and the maximum numbers of predicted sites for <italic>i</italic>th input sequence, <italic>nSiteMin<sub>i</sub></italic> and <italic>nSiteMax<sub>i</sub></italic> respectively. Then, the number of sites to be predicted for <italic>i</italic>th input sequence is randomly chosen between [<italic>nSiteMin<sub>i</sub></italic>, <italic>nSiteMax<sub>i</sub></italic>]. This random algorithm is run 1000 times for an input sequence set.</p></sec></sec><sec><title>Measures of prediction accuracy</title><p>There are several prediction accuracy measures for evaluating motif discovery algorithms (<xref ref-type="bibr" rid="b13">13</xref>,<xref ref-type="bibr" rid="b17">17</xref>,<xref ref-type="bibr" rid="b19">19</xref>,<xref ref-type="bibr" rid="b27">27</xref>). Many of them are derived from the accuracy definitions for evaluating gene predictions (<xref ref-type="bibr" rid="b34">34</xref>,<xref ref-type="bibr" rid="b35">35</xref>). Here, we use three levels of performance criteria: nucleotide, binding site and motif levels.</p></sec><sec><title>Nucleotide level accuracy</title><p>First, for each target binding site with overlapping predicted binding sites in an input sequence, we define the following values for calculating accuracy metrics at the nucleotide level (<xref ref-type="fig" rid="fig4">Figure 4</xref>): <italic>n</italic>TP (true positive), the number of target binding site positions predicted as binding site positions; <italic>n</italic>TN (true negative), the number of non-target binding site positions predicted as non-binding site positions; <italic>n</italic>FP (false positive), the number of non-target binding site positions predicted as binding site positions; <italic>n</italic>FN (false negative), the number of target binding site positions predicted as non-binding site positions.</p><p>The sensitivity over a pair of target/predicted binding sites is defined as:
<disp-formula id="e1"><label>1</label><ns1:math id="M1"><ns1:mrow><ns1:mi>n</ns1:mi><ns1:msub><ns1:mtext>S</ns1:mtext><ns1:mi>n</ns1:mi></ns1:msub><ns1:mo>=</ns1:mo><ns1:mfrac><ns1:mrow><ns1:mi>n</ns1:mi><ns1:mtext>TP</ns1:mtext></ns1:mrow><ns1:mrow><ns1:mi>n</ns1:mi><ns1:mtext>TP</ns1:mtext><ns1:mo>+</ns1:mo><ns1:mi>n</ns1:mi><ns1:mtext>FN</ns1:mtext></ns1:mrow></ns1:mfrac></ns1:mrow></ns1:math></disp-formula>
and specificity is defined as:
<disp-formula id="e2"><label>2</label><ns1:math id="M2"><ns1:mrow><ns1:mi>n</ns1:mi><ns1:msub><ns1:mtext>S</ns1:mtext><ns1:mi>p</ns1:mi></ns1:msub><ns1:mo>=</ns1:mo><ns1:mfrac><ns1:mrow><ns1:mi>n</ns1:mi><ns1:mtext>TP</ns1:mtext></ns1:mrow><ns1:mrow><ns1:mi>n</ns1:mi><ns1:mtext>TP</ns1:mtext><ns1:mo>+</ns1:mo><ns1:mi>n</ns1:mi><ns1:mtext>FP</ns1:mtext></ns1:mrow></ns1:mfrac><ns1:mo>.</ns1:mo></ns1:mrow></ns1:math></disp-formula>
In order to capture both specificity and sensitivity in a single accuracy measurement, we use the nucleotide level performance coefficient (nPC) following Pevzner and Sze (<xref ref-type="bibr" rid="b16">16</xref>) and Tompa <italic>et al</italic>. (<xref ref-type="bibr" rid="b18">18</xref>):
<disp-formula id="e3"><label>3</label><ns1:math id="M3"><ns1:mrow><ns1:mi>n</ns1:mi><ns1:mtext>PC</ns1:mtext><ns1:mo>=</ns1:mo><ns1:mfrac><ns1:mrow><ns1:mi>n</ns1:mi><ns1:mtext>TP</ns1:mtext></ns1:mrow><ns1:mrow><ns1:mi>n</ns1:mi><ns1:mtext>TP</ns1:mtext><ns1:mo>+</ns1:mo><ns1:mi>n</ns1:mi><ns1:mtext>FP</ns1:mtext><ns1:mo>+</ns1:mo><ns1:mi>n</ns1:mi><ns1:mtext>FN</ns1:mtext></ns1:mrow></ns1:mfrac></ns1:mrow></ns1:math></disp-formula>
According to this definition, the nPC value ranges over (0, 1) with the perfect prediction being the value of 1. Compared with the correlation coefficient (CC) (<xref ref-type="bibr" rid="b34">34</xref>,<xref ref-type="bibr" rid="b35">35</xref>), nPC has several benefits: it is straightforward to interpret, and practically, it also tells the experimental biologists the probable range that the true binding sites are located around the predicted positions. We also used the <italic>F</italic>-measure or Harmonic mean (<xref ref-type="bibr" rid="b36">36</xref>) as the overall accuracy measurement. Compared with geometric or arithmetic mean, it tends to penalize more the imbalance of sensitivity and specificity. The <italic>F</italic>-measure is defined as:
<disp-formula id="e4"><label>4</label><ns1:math id="M4"><ns1:mrow><ns1:mi>F</ns1:mi><ns1:mo>=</ns1:mo><ns1:mfrac><ns1:mrow><ns1:mn>2</ns1:mn><ns1:mo>&#8727;</ns1:mo><ns1:mtext>Sn</ns1:mtext><ns1:mo>&#8727;</ns1:mo><ns1:mtext>Sp</ns1:mtext></ns1:mrow><ns1:mrow><ns1:mtext>Sn</ns1:mtext><ns1:mo>+</ns1:mo><ns1:mtext>Sp</ns1:mtext></ns1:mrow></ns1:mfrac><ns1:mo>.</ns1:mo></ns1:mrow></ns1:math></disp-formula>
In the case that Sn and Sp are equal to 0, <italic>F</italic>-value is defined as 0.</p><p>In addition to accuracy scores for target binding sites with overlapping predictions, we need to address the cases of target binding sites which do not overlap predictions or predictions which do not overlap with any target binding sites. Suppose MT is the number of missing targets and MP the number of wrong predictions. We define the number of non-overlapping target and predicted binding site pairs as the larger number of MT and MP. The accuracy scores of these non-overlapping pairs are set to zero. This definition will penalize algorithms that report either too many or too few binding site predictions.</p><p>Based on the scores defined for the binding site pairs, the accuracy scores of a motif discovery algorithm are calculated as:
<disp-formula id="e5"><label>5</label><ns1:math id="M5"><ns1:mtable><ns1:mtr><ns1:mtd><ns1:maligngroup /><ns1:malignmark /><ns1:mfrac><ns1:mn>1</ns1:mn><ns1:mrow><ns1:mo>(</ns1:mo><ns1:mo>#</ns1:mo><ns1:mtext>-</ns1:mtext><ns1:mtext>motifgroup</ns1:mtext><ns1:mo>)</ns1:mo></ns1:mrow></ns1:mfrac><ns1:mstyle displaystyle="true"><ns1:munder><ns1:mo>&#8721;</ns1:mo><ns1:mrow><ns1:mtext>motifgroup</ns1:mtext></ns1:mrow></ns1:munder></ns1:mstyle><ns1:mrow><ns1:mfrac><ns1:mn>1</ns1:mn><ns1:mrow><ns1:mo>(</ns1:mo><ns1:mo>#</ns1:mo><ns1:mtext>-</ns1:mtext><ns1:mtext>sequences</ns1:mtext><ns1:mo>)</ns1:mo></ns1:mrow></ns1:mfrac></ns1:mrow></ns1:mtd></ns1:mtr><ns1:mtr><ns1:mtd><ns1:maligngroup /><ns1:malignmark /><ns1:mrow><ns1:mo>&#215;</ns1:mo><ns1:mstyle displaystyle="true"><ns1:munder><ns1:mo>&#8721;</ns1:mo><ns1:mrow><ns1:mtext>sequences</ns1:mtext></ns1:mrow></ns1:munder></ns1:mstyle><ns1:mrow><ns1:mfrac><ns1:mn>1</ns1:mn><ns1:mrow><ns1:mo>(</ns1:mo><ns1:mo>#</ns1:mo><ns1:mtext>-</ns1:mtext><ns1:mtext>sitepairs</ns1:mtext><ns1:mo>)</ns1:mo></ns1:mrow></ns1:mfrac></ns1:mrow><ns1:mstyle displaystyle="true"><ns1:munder><ns1:mo>&#8721;</ns1:mo><ns1:mrow><ns1:mtext>sitepairs</ns1:mtext></ns1:mrow></ns1:munder></ns1:mstyle><ns1:mrow><ns1:mi>n</ns1:mi><ns1:mtext>PC</ns1:mtext><ns1:mo>(</ns1:mo><ns1:mtext>or&#160;</ns1:mtext><ns1:mi>n</ns1:mi><ns1:mtext>&#160;SP&#160;or&#160;</ns1:mtext><ns1:mi>n</ns1:mi><ns1:mtext>Sn</ns1:mtext><ns1:mo>)</ns1:mo></ns1:mrow></ns1:mrow></ns1:mtd></ns1:mtr></ns1:mtable></ns1:math></disp-formula>
Thus, the score is first averaged over all binding site pairs in a sequence, followed by averaging over all sequences in a motif groups, then averaged over all the motif groups. Note that we allow multiple binding sites on a sequence as target sites.</p></sec><sec><title>Binding site level accuracy</title><p>The binding site level accuracy indicates whether predicted binding sites overlap with true binding sites by one or more nucleotide position. We define, sTP, sFP and sFN as follows: sTP, the number of predicted binding sites which overlaps with the true binding sites by at least 1 nt; sFP, the number of predicted binding sites which have no overlaps with the true binding sites; sFN, the number of true binding sites that have no overlaps with any predicted binding sites.</p><p>For each input sequence, we define the following accuracy metrics at the binding site level:</p><p>Performance coefficient:
<disp-formula id="e6"><label>6</label><ns1:math id="M6"><ns1:mrow><ns1:mtext>sPC</ns1:mtext><ns1:mo>=</ns1:mo><ns1:mfrac><ns1:mrow><ns1:mtext>sTP</ns1:mtext></ns1:mrow><ns1:mrow><ns1:mtext>sTP</ns1:mtext><ns1:mo>+</ns1:mo><ns1:mtext>sFP</ns1:mtext><ns1:mo>+</ns1:mo><ns1:mtext>sFN</ns1:mtext></ns1:mrow></ns1:mfrac></ns1:mrow></ns1:math></disp-formula></p><p>Sensitivity:
<disp-formula id="e7"><label>7</label><ns1:math id="M7"><ns1:mrow><ns1:mtext>sSn</ns1:mtext><ns1:mo>=</ns1:mo><ns1:mfrac><ns1:mrow><ns1:mtext>sTP</ns1:mtext></ns1:mrow><ns1:mrow><ns1:mtext>sTP</ns1:mtext><ns1:mo>+</ns1:mo><ns1:mtext>sFN</ns1:mtext></ns1:mrow></ns1:mfrac><ns1:mo>.</ns1:mo></ns1:mrow></ns1:math></disp-formula></p><p>Specificity:
<disp-formula id="e8"><label>8</label><ns1:math id="M8"><ns1:mrow><ns1:mtext>sSp</ns1:mtext><ns1:mo>=</ns1:mo><ns1:mfrac><ns1:mrow><ns1:mtext>sTP</ns1:mtext></ns1:mrow><ns1:mrow><ns1:mtext>sTP</ns1:mtext><ns1:mo>+</ns1:mo><ns1:mtext>sFP</ns1:mtext></ns1:mrow></ns1:mfrac><ns1:mo>.</ns1:mo></ns1:mrow></ns1:math></disp-formula>
The binding site level accuracy score of an input sequence set (e.g. ArcA) is the average of the scores over all its sequences. The binding site level accuracy score of the entire benchmark dataset is the average of the scores for all input sequence sets.</p></sec><sec><title>Sequence and motif level accuracy</title><p>To evaluate the capability to find at least one binding site in an input sequence, we define the sequence level success rate as the number of sequences <italic>N<sub>s</sub></italic> that have at least one correctly predicted motif divided by the total number <italic>N</italic> of sequences in an input sequence set:
<disp-formula id="e9"><label>9</label><ns1:math id="M9"><ns1:mrow><ns1:mtext>sSr</ns1:mtext><ns1:mo>=</ns1:mo><ns1:mfrac><ns1:mrow><ns1:msub><ns1:mi>N</ns1:mi><ns1:mi>s</ns1:mi></ns1:msub></ns1:mrow><ns1:mi>N</ns1:mi></ns1:mfrac></ns1:mrow></ns1:math></disp-formula>
The overall sequence success rate of an algorithm is thus the average of sSr over all the input sequence sets.</p><p>We introduce the motif level success rate score <italic>mSr</italic>, a sensitivity measure, to evaluate the adaptability of an algorithm to different types of motifs. is defined as the number of target motif groups <italic>N<sub>p</sub></italic>, which have at least one correctly predicted binding site divided by the total number of target motifs (M = 70). A prediction is regarded as correct when the predicted motif overlaps with the target motif by at least 1 nt.
<disp-formula id="e10"><label>10</label><ns1:math id="M10"><ns1:mrow><ns1:msub><ns1:mtext>mS</ns1:mtext><ns1:mtext>r</ns1:mtext></ns1:msub><ns1:mo>=</ns1:mo><ns1:mfrac><ns1:mrow><ns1:mi>N</ns1:mi><ns1:mi>p</ns1:mi></ns1:mrow><ns1:mrow><ns1:mi>M</ns1:mi></ns1:mrow></ns1:mfrac><ns1:mo>.</ns1:mo></ns1:mrow></ns1:math></disp-formula></p></sec></sec><sec><title>Alignment of annotated binding sites in RegulonDB</title><p>We use the experimentally determined binding sites information as the targets of prediction. Since the binding site sequences listed in RegulonDB are collected from literature of different experiments, initially they are not aligned to see the consensus motif patterns. Qin <italic>et al</italic>. (<xref ref-type="bibr" rid="b37">37</xref>) mentioned one such example in which by shifting the experimentally determined binding sites, more consistent motif patterns can be obtained. Here, we performed a systematic alignment of motif sequences in RegulonDB. Starting from a set of unaligned binding sites, we obtain an alignment which will show the conservation of each residue at each position of the binding site. <xref ref-type="fig" rid="fig5">Figure 5</xref> shows an example in RegulonDB, where the number of consensus positions increased from 2 to 15 by shifting the sequences back-and-forth. Increasing the number of consensus positions in a motif sequence alignment is critical for motif searching algorithms since most of them use a PSSM (<xref ref-type="bibr" rid="b8">8</xref>) to create a motif model, which is highly sensitive to consensus patterns of aligned sequences.</p><p>To evaluate improvement of consensus patterns of aligned motif sequences, we compare the information contents (<xref ref-type="bibr" rid="b38">38</xref>) of motifs before and after the alignment operation:
<disp-formula id="e11"><label>11</label><ns1:math id="M11"><ns1:mrow><ns1:msub><ns1:mi>I</ns1:mi><ns1:mtext>seq</ns1:mtext></ns1:msub></ns1:mrow><ns1:mo>=</ns1:mo><ns1:mstyle displaystyle="true"><ns1:munderover><ns1:mo>&#8721;</ns1:mo><ns1:mrow><ns1:mi>j</ns1:mi><ns1:mo>=</ns1:mo><ns1:mn>1</ns1:mn></ns1:mrow><ns1:mi>L</ns1:mi></ns1:munderover></ns1:mstyle><ns1:mrow><ns1:mstyle displaystyle="true"><ns1:munderover><ns1:mo>&#8721;</ns1:mo><ns1:mrow><ns1:mi>i</ns1:mi><ns1:mo>=</ns1:mo><ns1:mn>1</ns1:mn></ns1:mrow><ns1:mi>A</ns1:mi></ns1:munderover></ns1:mstyle><ns1:mrow><ns1:msub><ns1:mi>f</ns1:mi><ns1:mrow><ns1:mi>i</ns1:mi><ns1:mo>,</ns1:mo><ns1:mi>j</ns1:mi></ns1:mrow></ns1:msub><ns1:mo>ln</ns1:mo><ns1:mfrac><ns1:mrow><ns1:msub><ns1:mi>f</ns1:mi><ns1:mrow><ns1:mi>i</ns1:mi><ns1:mo>,</ns1:mo><ns1:mi>j</ns1:mi></ns1:mrow></ns1:msub></ns1:mrow><ns1:mrow><ns1:msub><ns1:mi>p</ns1:mi><ns1:mi>i</ns1:mi></ns1:msub></ns1:mrow></ns1:mfrac></ns1:mrow></ns1:mrow></ns1:math></disp-formula>
where <italic>A</italic> is the alphabet of nucleotides (A, C, G, T). <italic>L</italic> is the length of the sequences; <italic>p<sub>i</sub></italic> is the a priori probability of letter <italic>i</italic>, is the frequency that letter <italic>i</italic> occurs at position <italic>j</italic>; <italic>I</italic><sub>seq</sub> is the information content of the sequences.</p><p>To align a motif sequence set, first, we extend each known binding site in a motif group <italic>S</italic><sub>motif</sub> in both directions by 20 nt to create an extended sequence set <italic>S</italic><sub>ext</sub>. Then, we apply the multiple sequence alignment tool clustalW (<xref ref-type="bibr" rid="b39">39</xref>) to <italic>S</italic><sub>ext</sub> with a high penalty for gaps (essentially not allowing any gap in a multiple sequence alignment), which generates a new aligned sequence set, <italic>S</italic><sub>clw</sub>. To reconstruct a new motif set <italic>S</italic><sub>align</sub>, we trim each sequence in the <italic>S</italic><sub>clw</sub> to a new sequence with length equal to the original motif length as follows: starting from the center position of the sequence in <italic>S</italic><sub>clw</sub>, we check the information content of the nucleotides in the two columns in both directions and extend the motifs in the direction with a higher information content or randomly pick a direction if both directions have an equal information content. This procedure proceeds until the total length is equal to the original motif length. Finally, for all these aligned sequence sets, <italic>S</italic><sub>motif</sub>, <italic>S</italic><sub>ext</sub>, <italic>S</italic><sub>clw</sub> and <italic>S</italic><sub>align</sub>, we calculate their information contents to compare the conservation level of the sequence patterns.</p></sec><sec><title>RESULTS</title><sec><title>Prediction performance on ECRDB62A set</title><p><xref ref-type="table" rid="tbl1">Table 1</xref> shows the prediction performance at the nucleotide, binding site and motif levels for the five motif discovery algorithms as well as the random algorithm. The accuracy scores of AlignACE, BioProspector, MDScan and MotifSampler are averaged over 100 runs. The random algorithm is repeated for 1000 runs.</p><p>First, we found that at the nucleotide level, the prediction accuracy of all algorithms is relatively low: the maximum sensitivity, specificity and performance coefficient are only 0.259, 0.270 and 0.174, respectively. The accuracy levels are higher than the performance scores reported previously on eukaryotic data (<xref ref-type="bibr" rid="b18">18</xref>). This is due to their longer sequences ranging from 500 to 3000 nt, while the sequence lengths in ECRDB62A vary from 86 to 676 nt (average: 289 nt). BioProspector achieved the highest performance coefficient and specificity while MEME has the best sensitivity, partly due to its capability to estimate motif lengths. We find that all algorithms are significantly better than the random algorithm at the nucleotide level. Comparing the nPC and <italic>nF</italic>, we also found that both measures generate the identical ranking orders for the algorithms' performances. Therefore, below only PC/Sp/Sn accuracy scores are presented.</p><p>The prediction performance at the binding site level is better than the nucleotide level. The maximum specificity reaches 0.476 for MotifSampler and the maximum performance coefficient reaches 0.302 for MotifSampler. These accuracy scores are higher than what was reported before (<xref ref-type="bibr" rid="b18">18</xref>) because we regard overlaps with one or more nucleotides as sufficient to qualify as a correct prediction, while at least 4 nt overlaps were needed in the previous work (<xref ref-type="bibr" rid="b18">18</xref>). The justification is that when a predicted binding site overlaps with the true site with at least 1 nt, it is not difficult for experimental biologists to locate the true binding site position around the predicted anchor position since the motif width is only 10&#8211;20 nt on average. This higher prediction accuracy at binding sites level implies that at least these algorithms can locate rough positions of binding sites. At the binding site level, BioProspector and MEME are comparable with MotifSampler in terms of performance coefficient scores, all of which are better than AlignACE. This means that BioProspector and MotifSampler indeed improve the prediction performance of the simple Gibbs Sampling method. We also found that MEME is the best in terms of sensitivity and BioProspector best in terms of sequence level success rate, sSr while MEME is the second.</p><p>What is unexpected is the motif level success rate mS<italic><sub>r</sub></italic>. We found that the motif level success rates of all five algorithms are &gt;0.90, which is much higher than 0.73, the average performance of 1000 runs of the random algorithm. The <italic>P</italic>-value for the random algorithm to achieve an accuracy score of &gt;0.900 is 0.000015, which shows the significance of the motif level success rate of the tested algorithms. The <italic>P</italic>-value is calculated from 1000 runs of the random algorithm. The maximum accuracy in the population is 0.839 with the standard deviation of 0.04. This comparison demonstrates that the algorithms are able to reliably predict at least one correct binding site from all motif groups. This fact could be potentially exploited to improve existing algorithms. We also found the motif level success rate, <italic>mSr</italic>, of MEME is the highest among the five algorithms, showing that MEME can handle more diverse input sequences.</p><p>Another interesting observation is that the prediction accuracy of stochastic algorithms, such as AlignACE, BioProspector and MotifSampler, are very stable over multiple runs. For the mean nPC scores of AlignACE, BioProspector and MotifSampler, the standard deviation is &lt;0.01 for 100 runs. Because we did not observe a significant difference in different runs, all forthcoming experiment results for these three algorithms are from only one run.</p><p>It would be interesting to compare our results on prokaryotic datasets with what reported on eukaryotic datasets (<xref ref-type="bibr" rid="b18">18</xref>) since both studies evaluated AlignACE, MotifSampler and MEME and used the statistics <italic>n</italic>PC in the evaluation. However, note that this comparison is not straightforward because of the following reasons. First, the previous work allowed the developers of each algorithm to tune its parameter sets specifically to individual input data and also human intervention to the outputs as pre- and post-processing including literature survey, while we adopt the minimal parameter-tuning principle to simulate the motif discovery situation in practice by biologists. The level of human intervention allowed in the previous work is not feasible for the current large benchmark study. Second, the datasets are significantly different, which strongly affects the prediction performance. For example, the sequence length used in the previous work (<xref ref-type="bibr" rid="b18">18</xref>) varies from 500 to 3000 bp, while it varies from 86 to 676 in ECRDB62A. This explains that even though experts tuned their algorithms for the eukaryotic datasets, the maximum <italic>n</italic>PC score for all three algorithms is &lt;0.05, which is much lower than 0.158 as reported here on ECRDB62A datasets and 0.10 on ECRDB70B-800 whose sequence length is &#8764;1600 bp.</p><p>In this study, we evaluated the accuracy of the best prediction out of top five scoring predictions. This is because in practice biologists can test five candidate motifs by experiments if they know the correct sites are included in the top five predictions with a reasonably high probability (accuracy). But for comparison, we also reported the statistics of the accuracy of the top-scoring motifs in <xref ref-type="table" rid="tbl2">Table 2</xref>.</p><p>First, it is evident that on average the top-scoring motif is not the best prediction. For example, in the case of MotifSampler the top-scoring motif corresponds to the best prediction in only 45% of the cases. Second, the discrepancy of the accuracy between the best and the worst prediction is relatively larger for AlignACE, MEME and MotifSampler, and the mean accuracy of them are lower than the other two algorithms. We found that this is resulted from the way these three algorithms find the next best-scoring motifs: once the top-scoring motif is found, its positions are masked out so that no subsequent sites are overlapped with them. Therefore, averaging the accuracy of the multiple top-scoring motifs is disadvantageous for the three algorithms.</p></sec><sec><title>Scalability</title><p>The scalability concerns how the algorithm performance changes with the increase of the number of sequences, the motif width and the sequence length.</p><p>We generated eight types of datasets with different margin sizes (extending on both sides of target motifs) of 20, 50, 100, 200, 300, 400, 500 and 800. Hence, the total sequence length is the target motif width plus twice the margin size. Each type has 70 motif groups with at least two sequences in a dataset. We run the five algorithms with the same parameter settings as in the previous section.</p><p><xref ref-type="fig" rid="fig6">Figure 6</xref> shows the prediction accuracy at the nucleotide and binding site levels. First at the nucleotide level, the performance of all the algorithms decreases significantly as the sequence length increases (<xref ref-type="fig" rid="fig6">Figure 6a</xref>). When the margin size is &lt;200 nt, all algorithms except for AlignACE showed a similar performance. What is interesting is that when the margin size becomes larger than 400 nt, BioProspector, MDScan and MEME become the best algorithms, while MotifSampler and AlignACE become quite ineffective. Note that AlignACE and MotifSampler are all based on Gibbs sampling strategy while MEME and MDScan have an enumerative component in their search strategy. This performance discrepancy shows that for long input sequences, Gibbs sampling strategy tends to become too inefficient to identify the binding sites correctly.</p><p>At the binding site level, BioProspector, MDScan and MEME are the best algorithms, especially when the sequence length (double margin size) becomes &gt;300 nt (<xref ref-type="fig" rid="fig6">Figure 6b</xref>). <xref ref-type="fig" rid="fig7">Figure 7</xref> shows the motif level success rates with respect to different margin sizes. Here, MEME is the best with its capability to locate at least one correct binding site for a given dataset. In this test, AlignACE also has a high success rate. We also find all algorithms are significantly better than the random algorithm in terms of the motif level success rate.</p><p>To examine why MEME has the highest motif level success rate, we compare the sensitivity (nSn) and the specificity (nSp) of these algorithms (<xref ref-type="fig" rid="fig8">Figure 8</xref>). It is illuminating that MEME has a dominant sensitivity, contributing to its high success rate mSr. One possible explanation of MEME's high sensitivity is that it is the only algorithm that has an exhaustive enumerative component while all other algorithms have a local search component. Another possible factor is that MEME can automatically adjust the motif widths while other algorithms use a fixed motif width.</p></sec><sec><title>Effect of different parameters for the expected width and numbers of motifs</title><p>Motif discovery algorithms have several parameters to tune its prediction performance. Here, we examined the effect of two of the most critical parameters of the algorithms. One is the expected motif width <italic>W<sub>e</sub></italic>, and the other is the expected number <italic>N</italic><sub>bs</sub> of binding sites for a sequence or dataset. To evaluate how the parameter <italic>W<sub>e</sub></italic> affects the performance, we run the algorithms on the ECRDB70B-200 dataset using different <italic>W<sub>e</sub></italic> ranging from 5 to 25 with step of 5. For stochastic algorithms, such as AlignACE, BioProspector and MotifSampler, the experiments are repeated for 10 times and the average scores are reported. Since MEME can adaptively estimate the best motif width, we only conducted a single run using the parameter setting specified in the Method Section.</p><p><xref ref-type="table" rid="tbl3">Table 3</xref> shows how the nucleotide level accuracy varies with the different parameter of estimated motif width, <italic>W<sub>e</sub></italic>. Generally speaking, if <italic>W<sub>e</sub></italic> is too small, the algorithms will be penalized in sensitivity. If <italic>W<sub>e</sub></italic> is too large, they will be penalized in specificity. We found that for both BioProspector and MDScan, the best performance is achieved at <italic>W<sub>e</sub></italic> of 20, which is closest to the average target motif width of 21.9, while AlignACE and MotifSampler work best with <italic>W<sub>e</sub></italic> of 10 and 25, respectively.</p><p>We have chosen 15 as the expected motif width, which is approximately the average between the default value of the algorithms (which is 10 expect for MEME) and the average size of the binding sites in the benchmark set. The results in <xref ref-type="table" rid="tbl3">Table 3</xref> clarified that the optimal value for the motif width differs from algorithm to algorithm even for the same benchmark dataset. The value 15 we used performed better or equal (MEME) for four of the algorithms than using the default value of 10. These results illustrate the difficulty for biologists to tune good parameters when they use these algorithms.</p><p>Another parameter we have examined is the number of expected binding sites in an input dataset. AlignACE and MEME have the parameter and MotifSampler also has it as the maximal number of expected binding sites for a sequence. MDScan and BioProspector do not have the parameter which user can tune. For both ECRDB62A and ECRDB70B-X datasets, there are cases that multiple binding sites of a motif exist on a single sequence. We run AlignACE, MEME and MotifSampler on the ECRDB70B-200 dataset with a different value of the estimated sites per sequence (<italic>nSite</italic>) ranging from 1 to 5. We conduct one run for MEME and 10 runs for AlignACE and MotifSampler, and the average accuracy scores are reported. All other parameters are set as described in Materials and Methods. In <xref ref-type="table" rid="tbl4">Table 4</xref>, the rightmost column shows the results with the default <italic>nSite</italic> value (AlignACE: 10, MEME and MotifSampler: Unset). Both AlignACE and MotifSamper achieve the highest accuracy with the default setting. However, MEME works best with <italic>nSite</italic> of 1. This is a little surprising since for the ECRDB70B-200 dataset, the average number of site per sequence is 1.78 with the standard deviation of 0.8.</p><p>The analysis above on the effect of changing two parameters illustrates the difficulty of users to tune parameters. A different algorithm has a different optimal parameter even for the same dataset. Moreover, the optimal parameter does not always correspond to the average value of that parameter in the dataset, so that making a good guess of the optimal parameter value is even difficult. In practice, it is also difficult to obtain the data to make an estimation of the parameter values.</p></sec><sec><title>Effect of the background Markov models</title><p>Another factor that affects the prediction accuracy of some motif discovery algorithms is the background Markov models generated from background sequences. To evaluate their effects, we generated two types of background Markov models for BioProspector, MotifSampler and MEME: the first type is generated from the whole <italic>E.coli</italic> genome; the second type is created using only the intergenic regions. We generated six Markov background models with the order ranging from 0th to 5th for each model type except that BioProspector, which has only 0th to 3rd order background models. We run the algorithms over the intergenic dataset (<xref ref-type="table" rid="tbl5">Table 5</xref>).</p><p>Unexpectedly, the order of the background Markov models does not have a significant impact on the performance. For example, MEME achieves similar performances with 1st, 2nd and 3rd order models generated from the whole <italic>E.coli</italic> genome. This is also true for other two algorithms. We also found background models from the whole genome or intergenic regions lead to different prediction accuracy for the algorithms. Both BioProspector and MEME achieve a better accuracy for the whole genome background models while MotifSampler works better with background models from intergenic regions. Based on these observations, we use the third-order Markov models from whole genome for BioProspector and MEME and the third-order Markov models from intergenic regions for MotifSampler throughout this study.</p></sec><sec><title>Effect of the number of input sequences</title><p>In this section, we investigate how the number of sequences in a given input sequence set affects the prediction accuracy because it is a dominant factor that determines the time complexity of motif discovery algorithms. For this study, input sets with <italic>K</italic> (=5, 10, 20, 30, 40) number of sequences are generated as follows: first, we select the following seven motif groups, CRP.txt (286 sequences), Lrp (150 sequences), FIS(138 sequences), IHF (126 sequences), FNR (102 sequences), NarL (84 sequences) and ArcA (80 sequences). These motif groups are the only ones with at least 40 sequences. For each motif group, we extend each binding site with 200 nt on both sides to create raw input sequences. Then, from each such set of raw input sequences, we randomly select <italic>K</italic> sequences without duplicates. Ten such sequence sets are created for each <italic>K</italic>. We then run the motif discovery algorithms on all 70 (=7*10) datasets. The prediction accuracy scores are then averaged for all the input sequence sets with the same number of (<italic>K</italic>) sequences (<xref ref-type="fig" rid="fig9">Figure 9</xref>). It is observed that when the number of sequences becomes &gt;10, the performance coefficient at nucleotide level becomes stable (<xref ref-type="fig" rid="fig9">Figure 9a</xref>). More input sequences do not improve the prediction accuracy. <xref ref-type="fig" rid="fig9">Figure 9b</xref> even shows that the binding site level accuracy are almost independent of the number of sequences except that BioProspector seems to benefit from more input sequences. Therefore, for a large input sequence set, it is recommended to use an algorithm which has a good scalability to the number of sequences, such as BioProspector. If a user insists to use a computationally demanding algorithm, such as MEME, this observation suggests a novel approach: namely, one can input only partial input sequences to a motif discovery algorithm to obtain a motif model (e.g. PSSM) and then use this model to find motifs in the remaining sequences. In this manner, a significant reduction in the running time can be achieved without sacrificing the prediction accuracy.</p></sec><sec><title>Effect of the motif length</title><p>The target motif length is another factor that influences the prediction accuracy. For a given margin size on both sides, the conserved motif length along with the conservation level determines the signal-to-noise ratio. In the ECRDB70B-200, the motif length varies from 5 to 61 nt with the mean of 22.8 (the standard deviation is 11.92). To evaluate the effect of the motif length on the prediction accuracy, ideally, we need to remove other factors, such as the number of sequences in the input sequence set. However, from the previous section, we know that the influence of the number of sequence on the prediction accuracy is limited. Therefore, we used the same results from the previous section, reorganizing them to examine how motif length affects algorithm performance. Specifically, we extract the prediction accuracy scores of all the algorithms on the input sequence sets with the margin size of 200 nt on both sides. The motifs are grouped into four motif length groups, namely, {<italic>mL</italic>&#8804;9}, {10&lt;<italic>mL</italic>&#8804;15}, {16&lt;<italic>mL</italic>&#8804;20}, {21&lt;<italic>mL</italic>&#8804;25}, {26&lt;<italic>mL</italic>}. Then, the accuracy score is averaged within the length groups.</p><p>The results are summarized in <xref ref-type="table" rid="tbl6">Table 6</xref>. We found that AlignACE and MEME achieve higher prediction accuracy on datasets with longer motif width. For Mdscan, motif width barely affects the performance (between 0.2 and 0.23), and in addition, the maximum (0.23) is obtained for motifs of 21&#8211;25 nt. On the other hand, BioProspector and MotifSampler have no simple relationships between the motif length and the performance; they achieved the highest accuracy on datasets with intermediate motif lengths. One possible reason for this difference is that only AlignACE and MEME has the capability to adjust motif model length in a single run. Since the average motif length is 21.70, when the motif length becomes bigger, those algorithms with fixed-length motif models will be increasingly penalized due to the inappropriate parameter setting of the motif length. In practice, the real motif length of an input sequence set is usually unknown and usually users have to specify an estimated motif length for AlignACE, MDScan, MotifSampler and BioProspector. It is thus suggested to run these algorithms multiple times with different motif widths to get the best result.</p></sec><sec><title>Correlation between the significance scores and the accuracy</title><p>Most of motif discovery algorithms provide a score which evaluate the statistical significance of predicted binding sites. As investigated by Liu <italic>et al</italic>. (<xref ref-type="bibr" rid="b19">19</xref>) the binding site with the highest significance scores are not necessarily the best prediction of the target motifs. They calculated the average ranks of the correct binding sites when in the top five reported binding sites by MDScan, BioProspector, CONSENSUS (<xref ref-type="bibr" rid="b40">40</xref>) and AlignACE. They found that MDScan and BioProspector usually report the most accurate predictions with the top score while the most accurate predictions of the other two algorithms are within top 1 to 3 on average. However, their study did not show the consistency between the significance scores and the accuracy scores.</p><p>Here, we examined whether motif significance scores are correlated with prediction accuracy using ECRDB70B-200. <xref ref-type="fig" rid="fig10">Figure 10</xref> shows results of MDScan. The performance coefficient scores (nPC and sPC) of the binding sites with the top score are plotted relative to their MAP scores. However, no clear correlation between these two scores is found. For each significance score range, the variation of accuracy is large. This lack of correlation between the significance scores and the accuracy scores also applies to other four algorithms, showing that high significance score does not necessarily indicate high prediction accuracy. We also found that motif significance scores from different input sequence sets are not comparable in general. In other words, one cannot judge the quality of a prediction simply by looking at its significance score.</p></sec><sec><title>Ensemble algorithms</title><p>In the pioneering study of gene-prediction algorithm evaluation, Burset and Guigo (<xref ref-type="bibr" rid="b34">34</xref>) showed that combining the outputs of several algorithms can be beneficial to improve the specificity, which means that coincidence of several algorithms can reinforce a given prediction. These combining algorithms are called ensemble algorithms in the machine learning field and have proven to be extremely successful (<xref ref-type="bibr" rid="b41">41</xref>). In the domain of protein structure prediction, ensemble algorithms or meta-server approaches are also very successful, as reported in CASP5 (<xref ref-type="bibr" rid="b42">42</xref>). Despite these encouraging results, to the best of our knowledge, there is no report of ensemble algorithms for motif discovery problems. Here, we show the first result for a simple ensemble algorithm for motif discovery. The datasets used here are the same as used in previous experiments with margin size 50. We have tested ensemble algorithms based on multiple runs of three stochastic algorithms, AlignACE, BioProspector and MotifSampler.</p><p><xref ref-type="table" rid="tbl7">Table 7</xref> shows the nucleotide level performance coefficient (nPC) of the three ensemble algorithms tested on the ECRDB70B-50. For comparison, it also shows the results of the base algorithms as well as MDScan and MEME. For each base algorithm, we tested four different consensus threshold values and summarize the best results (the fifth row of <xref ref-type="table" rid="tbl7">Table 7</xref>). The score in the bracket shows the highest accuracy among all. First, we find that ensemble algorithms have improved the accuracy over their corresponding base algorithms. Ensemble AlignACE, BioProspector and MotifSampler show improved performance by 39, 6 and 45%, respectively. The best ensemble algorithm (based on MotifSampler) outperforms the best standalone algorithm (BioProspector) by 26.5% with the accuracy score of 0.382 versus 0.302. The ensemble algorithm can also improve the performance of AlignACE to the level of MEME. These results show that a high degree of consensus among multiple predictions is a good indication of the quality of the predicted binding sites.</p><p>A remaining question about ensemble algorithms is whether its increased accuracy comes from synergetic effects of multiple predictions or simply because multiple runs have a better chance of getting a site with a higher accuracy. We developed a simple multi-restart algorithm in which a base algorithm is repeated for 10 times, each run reporting five predictions. We sort 50 predictions by their statistical score and report the top five scoring predictions as the final results of the multi-restart algorithm (the last row of <xref ref-type="table" rid="tbl7">Table 7</xref>). While the multi-restart algorithm improves AlignACE, it works worse than the base algorithms for BioProspector and MotifSampler. We found that reporting the top five scoring predictions out of 10 runs can make the final results worse because the score does not correlates well with the accuracy as shown by <xref ref-type="table" rid="tbl2">Table 2</xref>, <xref ref-type="fig" rid="fig10">Figure 10</xref> and by Liu <italic>et al</italic>. (<xref ref-type="bibr" rid="b10">10</xref>). For MotifSampler, we used the consensus score, because it correlates better with the accuracy than the other two scores provided (but still not good: the correlation coefficient between nPC and the consensus score is 0.21, 0.21 with the information content, and &#8722;0.049 with the log-likelihood score, all with a <italic>P</italic>-value of &gt;0.05). It confirms that ensemble algorithms distinguish themselves from the multiple-restarting strategy by exploiting synergetic effects among multiple predictions.</p><p>We also tested the simple ensemble algorithm on sequences with larger margin sizes. We found that when the margin size is increased to 200, our simple ensemble algorithm achieved similar or worse performance than corresponding base algorithms. After close examination, we found that this failure is caused by the divergence of the predictions of the base algorithms for long input sequences. To address this divergent prediction issue, we are developing more sophisticated clustering-based ensemble algorithms. The ensemble algorithms shown here are based on multiple runs of a single standalone algorithm. It is natural to combine results of multiple algorithms to achieve synergetic effect, which we have observed their benefits in our preliminary experiments. This research will be reported elsewhere.</p></sec></sec><sec><title>DISCUSSION</title><p>We have developed a comprehensive set of performance measures at the nucleotide, binding site and motif levels and systematically evaluated five motif discovery algorithms using a prokaryotic motif dataset, ECRDB70. We selected algorithms which solely use input sequences for finding motifs, because this is the baseline of any of the recent algorithms which will also incorporate additional information. Special attention is paid to carefully examine factors that affect the prediction accuracy, which have not been carried out in the previous studies. We found that the prediction accuracy at the nucleotide and binding site levels is relatively low while the motif level prediction accuracy is surprisingly high. These conclusions complement the evaluation work reported for eukaryotic datasets (<xref ref-type="bibr" rid="b18">18</xref>). We compared the scalability of these algorithms and found that Gibbs Sampling based algorithms tend to fail for long sequences. Other algorithms also show significant degradation when the sequence lengths increase. These results suggest a need for improving scalability of motif discovery algorithms, which is particularly important when motifs are sought from an increasing number of complete genome sequences. We also found that the capability of adapting motif length is important which partially contributes to the dominance of MEME's high prediction sensitivity. Interestingly, it is observed that increasing the number of input sequences does not always improve the prediction accuracy once it reaches a threshold level, which can be exploited to reduce computational complexity of some algorithms. Another observation is that for noisy real datasets, no strong correlation between significance scores and prediction accuracy is observed for all motif discovery algorithms across all datasets. Finally, we developed a simple ensemble motif discovery algorithm that showed promising results for input sequence datasets of moderate length, showing that the available diverse motif discovery algorithms can be exploited to our advantage. It also implies that the high degree of consensus among multiple predictions of one or more algorithms may indicate their correctness.</p><sec><title>Alignment of motif sequences in RegulonDB</title><p>In <xref ref-type="fig" rid="fig5">Figure 5</xref>, we have shown one example of alignment with increased consensus positions. We systematically checked the differences of the information content for the prealigned motif sets in ECRDB70 <italic>S</italic><sub>motif</sub> and for the aligned motif sets <italic>S</italic><sub>align</sub>. The same comparison is also applied to the extended sequence sets <italic>S</italic><sub>ext</sub> and aligned sequence sets <italic>S</italic><sub>clw</sub> (<xref ref-type="fig" rid="fig11">Figure 11</xref>). We found that multiple sequence alignment can increase the information content of a motif group with an average gain of 95.7%. The aligned sequences <italic>S</italic><sub>clw</sub> increase the information content of <italic>S</italic><sub>ext</sub> by &#8764;65%. There are some degradation of information content from <italic>S</italic><sub>ext</sub> to <italic>S</italic><sub>ckw</sub> due to the inherent divergence in the region of outside of motifs. The significant increase of information content suggests that shifting binding sites in a motif group using a multiple alignment procedure can greatly improve the motif models, thus improve the subsequent motif search performance.</p><p>The alignment procedure could be further improved if the following fact of the annotated binding sites in RegulonDB is considered. It is known that some transcription factors are not sensitive to the strands of the DNA, which means that for some binding sites, either one of the two strands may be annotated in RegulonDB. It is thus possible that the opposite strand of an annotated binding site can be used to generate an alignment with more consensus position. For a set of <italic>K</italic> binding sites there are 2<italic><sup>K</sup></italic> combinations of strand selections in total. For small <italic>K</italic>, one can simply enumerate all of them and pick out the one with highest information content. For a very large <italic>K</italic>, it is computationally prohibitive to test all the possible combinations of strands of <italic>K</italic> sequences. For such a large <italic>K</italic>, after we do a coarse alignment as described above, for each binding site sequence, we could test whether a replacement with the opposite strand can improve the information content. If true, we include its opposite strand rather than the annotated site to build the motif model. These algorithms are to be tested in a future work.</p></sec><sec><title>Limitations of current motif discovery algorithms</title><p>Despite the long-time effort for the motif discovery problem, our benchmarking results show that current sequence-based motif discovery algorithms have several fundamental limitations. First, the nucleotide level and binding site level prediction accuracy are still very low (i.e. nPC and sPC) (<xref ref-type="fig" rid="fig6">Figure 6</xref>) even on the prokaryotic motifs, which are supposed to be easier to be captured than eukaryotic ones. Therefore, in the current situation users should be aware of the limitations and be extremely careful in interpreting computational predictions. It should be also noticed that the significance score of algorithms do not necessarily corresponds directly to the accuracy of found motifs (<xref ref-type="fig" rid="fig10">Figure 10</xref>). The lack of scalability is another problem for all the evaluated algorithms. Below we list three technical difficulties which cause these limitations.</p><p>The first one is the inherent low signal/noise ratio in only-sequence-based motif discovery problems. As shown in <xref ref-type="fig" rid="fig6">Figure 6b</xref>, prediction performance decreases significantly as the length of sequences increases for all five algorithms. Several strategies have been proposed to increase the signal-to-noise ratio. Wang <italic>et al</italic>. (<xref ref-type="bibr" rid="b43">43</xref>) proposed an iterative refinement approach to this problem. Phylogenetic trees and structural information can be incorporated to increase signal-to-noise ratio (<xref ref-type="bibr" rid="b10">10</xref>&#8211;<xref ref-type="bibr" rid="b13">13</xref>,<xref ref-type="bibr" rid="b44">44</xref>&#8211;<xref ref-type="bibr" rid="b47">47</xref>).</p><p>The limitation also comes from the pattern model used to capture the regularity among the binding sites for transaction factors. The PSSM model is used for all five algorithms, with a slight variation. This model, however, has difficulty in modeling gapped motifs and assumes that the nucleotide positions are independent of each other, which is not true in reality. The syntactic deterministic motif models, such as consensus sequence models, suffer from their applicability only to short, highly conserved sequences (<xref ref-type="bibr" rid="b48">48</xref>). Several methods have been proposed to incorporate position-dependence information, including a novel hidden Markov model method (<xref ref-type="bibr" rid="b48">48</xref>), which tries to capture dependency between non-adjacent positions using a position re-ordering method. Osada <italic>et al</italic>. (<xref ref-type="bibr" rid="b22">22</xref>) introduced per-position information content as well as local pairwise nucleotide dependencies to improve the motif search performance. However, such more advanced motif models have not been incorporated into current motif discovery algorithms.</p><p>The local optima phenomena in optimization algorithms should be also mentioned here. Many popular motif discovery algorithms are based on heuristic search algorithms such as greedy search (<xref ref-type="bibr" rid="b13">13</xref>), Gibbs sampling (<xref ref-type="bibr" rid="b24">24</xref>,<xref ref-type="bibr" rid="b27">27</xref>) and Expectation Maximization (<xref ref-type="bibr" rid="b13">13</xref>,<xref ref-type="bibr" rid="b25">25</xref>). The performances of these methods are subject to potential suboptimal solutions in the search space. While usually 10&#8211;20 starting points are evaluated to find the most potential search direction, the effectiveness of this simple approach is usually limited for large multi-modal search spaces found in datasets with long sequences. Extensive experiments are needed to evaluate how severe the local optima issue could limit the performance of existing heuristic-based methods and whether stronger global optimization techniques, such as genetic algorithms and others (<xref ref-type="bibr" rid="b49">49</xref>), could be used to improve it.</p></sec><sec><title>Potentials of motif discovery algorithms</title><p>Although the low prediction performance has been revealed on the nucleotide and the binding site level accuracy, we believe that sequence-based motif discovery still has room for improvement. First, we could take advantage of the high motif-level success rate (<italic>mSr</italic> &#8805; 0.92), a capability to identify at least one binding site correctly for a motif group in ECRDB70 (i.e. mSr, <xref ref-type="fig" rid="fig7">Figure 7</xref>).</p><p>A remarkable characteristic of the motif level success rate is the better tolerance to a longer input sequence size, i.e. a better scalability (<xref ref-type="fig" rid="fig7">Figure 7</xref>). Based on this observation, one natural idea of searching motifs in a set of long sequences is to perform the motif search in two steps, namely, to perform the second search just in the vicinity of motifs identified in the initial search. In this manner, the search space could be greatly reduced.</p><p>Two additional approaches we propose here are the ensemble algorithms and the hybrid algorithms. This is to take advantage of the high motif-level success rate and the stochastic nature of some motif discovery algorithms.</p><p>Ensemble algorithms are compound algorithms that combine the results of multiple predictions from multiple runs of a single or multiple algorithms. Ensemble algorithms have been shown to be able to build strong algorithms based on simple weak algorithms in both gene-finding (<xref ref-type="bibr" rid="b35">35</xref>), protein structure prediction (<xref ref-type="bibr" rid="b42">42</xref>) and machine learning (<xref ref-type="bibr" rid="b41">41</xref>). Our simple consensus ensemble algorithm provides the first proof of the promise of ensemble algorithms in motif discovery problems. Therefore, it is expected that ensemble algorithms are able to improve the accuracy of motif discovery. First, it is found that coincidence of the predictions of multiple algorithms usually could indicate the confidence of the predictions. Second, since all five evaluated algorithms achieved very high motif-level success rates, a set of diverse predictions from multiple algorithms thus has a high probability to cover all binding sites. There are several ways to exploit this property using ensemble algorithms. One way is to apply a motif discovery algorithm in two steps as described above, and another way is to apply a clustering algorithm on the multiple predictions to identify consensus predicted regions. As dozens of motif discovery algorithms are available today, the ensemble approach is especially promising to use them to our advantage.</p><p>So-called hybrid algorithms assemble the complementary components of multiple algorithms to build a stronger algorithm. This is different from assembling multiple predictions in an ensemble algorithm. Many algorithms have been proposed to address the motif discovery problems, from early algorithms based on consensus strings or regular expressions to the popular PSSM-based heuristic algorithms and the latest algorithms that exploit phylogenetic information. As shown by Sinha and Tompa (<xref ref-type="bibr" rid="b17">17</xref>), each type of algorithms have their own strengths. It is thus natural to combine characteristics to develop better algorithms. For example, heuristic algorithms have an advantage in their flexible representation of motif models while statistical algorithms usually run much faster than heuristic search methods (<xref ref-type="bibr" rid="b19">19</xref>). A hybrid algorithm can then be designed by first applying statistic algorithms to find potential sequence segments and then applying heuristic algorithms to locate the final motif positions.</p><p>The second interesting characteristic observed in this study is that increasing the number of sequences does not necessarily improve the prediction accuracy once the minimum number is reached. There are several ways to exploit this characteristic. First, it can be used to significantly reduce the running time of some time-consuming motif discovery algorithms by only feed a portion of the input sequences and then use the extracted motif model to find the binding sites on the remaining sequences. Second, we can divide the input sequences into multiple groups and apply different algorithms on each group. We then use the ensemble algorithms to summarize the predictions.</p><p>A trend of recent motif discovery algorithms is to incorporate additional information, such as phylogenetic trees or family sequences, to improve the predication accuracy (<xref ref-type="bibr" rid="b13">13</xref>,<xref ref-type="bibr" rid="b14">14</xref>). This strategy can effectively increase the signal/noise ratio, thus greatly improve both the specificity and sensitivity. In contrast, in our study, we have carefully revealed limitations and potentials of current sequence-based algorithms, and indicated ways to take advantage of the potentials for improvement. Since sequence-based approach is the baseline of any modern algorithms, our finding will surely benefit to improve almost all the algorithms.</p></sec></sec></body></data>